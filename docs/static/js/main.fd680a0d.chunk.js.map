{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleInputChange","e","target","value","console","log","onSubmit","preventDefault","trim","length","category","type","onChange","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAItCC,EAAoB,SAACC,GACvBF,EAAcE,EAAEC,OAAOC,QAe3B,OADAC,QAAQC,IAAIL,GAEZ,oCACI,0BAAMM,SAdW,SAACL,GAClBA,EAAEM,iBAECT,EAAWU,OAAOC,OAAO,IACxBb,GAAc,SAAAc,GAAQ,OAAKZ,GAAL,mBAAmBY,OACzCX,EAAc,OAWd,2BACAY,KAAM,OACNR,MAAOL,EACPc,SAAUZ,O,uBC9BTa,EAAO,uCAAG,WAAOH,GAAP,uBAAAI,EAAA,6DAEbC,EAFa,iDAEiCC,UAAUN,GAF3C,+DAGDO,MAAMF,GAHL,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAX,QAAQC,IAAI,CAACmB,KAAGC,QAAMV,QAElB,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZb,mBAAS,CAC/BuB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAU,WAENvB,EAAQH,GAAU2B,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIjB,CAACvB,IAEGwB,EDfuBK,CAAa7B,GAA/BgB,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAYnB,OAEI,oCAEA,gCAAMvB,EAAN,KAECuB,EAAU,sCAAiB,4BAE3B,yBAAMJ,UAAU,aAGLH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,iBACQA,EADR,CAEIiB,IAAKjB,EAAIC,YEGtBiB,EAhCK,WAAO,IAAD,EAEW5C,mBAAS,CAAC,WAFrB,mBAEf6C,EAFe,KAEJ9C,EAFI,KAQtB,OACI,oCAEA,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ8C,EAAWpB,KAAK,SAAAZ,GAAQ,OACpB,kBAAC,EAAD,CACA8B,IAAK9B,EACLA,SAAUA,UCnBxBiC,EAAUC,SAASC,cAAc,SACvCC,IAASC,OACP,kBAAC,EAAD,MAAiBJ,I","file":"static/js/main.fd680a0d.chunk.js","sourcesContent":["import React ,{useState}from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(category => [inputValue,...category]);\r\n            setInputValue('');\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    console.log(handleInputChange);\r\n    return (\r\n    <>\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input \r\n            type =\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n    </>\r\n    )\r\n\r\n   \r\n}\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=yBN2qnyMzYvDOGI5ITghnVcgV7G19dQ0`;\r\n    const resp= await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs= data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React /*{useState, useEffect}*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    //const [images, setImages] = useState([]);\r\n\r\n    //useEffect(() =>{\r\n     //   getGifs(category).then( imgs => setImages(imgs))\r\n    //}, [category])\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <>\r\n\r\n        <h3> {category} </h3>  \r\n\r\n        {loading ? <p>Loading</p> : <p></p>}\r\n\r\n        {< div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            {...img}\r\n                            key={img.id}\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=> {\r\n\r\n        getGifs(category).then(imgs => {\r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n        })\r\n\r\n    }, [category]);\r\n\r\n    return state; // \r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp= () => {\r\n   \r\n    const [categories,setCategories]=useState(['Naruto']);\r\n\r\n    //const handleAdd= (e) => {\r\n    //  setCategories([...categories, 'Naruto']);\r\n    //}\r\n\r\n    return(\r\n        <>\r\n\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map (category => (\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n                    />\r\n                    ))\r\n            }\r\n            \r\n            \r\n        </ol>\r\n\r\n        </>\r\n    )   \r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nconst divRoot = document.querySelector('#root');\nReactDOM.render(\n  <GifExpertApp/>, divRoot\n);\n\n"],"sourceRoot":""}